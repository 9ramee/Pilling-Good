<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ks46team04.admin.mapper.FundingMapper">
	<resultMap type="Funding" id="fundingResultMap">
		<id 	column="funding_code"			property="fundingCode"/>
		<result column="funding_name"			property="fundingName"/>
		<result column="funding_foundation"		property="fundingFoundation"/>
		<result column="goods_code"				property="goodsCode"/>
		<result column="funding_goal_amount"	property="fundingGoalAmount"/>
		<result column="funding_start_date"		property="fundingStartDate"/>
		<result column="funding_end_date"		property="fundingEndDate"/>
		<result column="funding_progress"		property="fundingProgress"/>
		<result column="funding_reg_Date"		property="fundingRegDate"/>
		<result column="funding_update_Date"	property="fundingUpdateDate"/>
	</resultMap>
	
	<insert id="registFunding" parameterType="Funding">
		/* 펀딩 등록 */
		INSERT INTO each_funding_info
		(funding_code, funding_name, funding_description, funding_foundation, goods_code, funding_goal_amount,
		 funding_start_date, funding_end_date, funding_progress, funding_reg_id, funding_reg_date, funding_update_id, funding_update_date)
		VALUES 
		(sf_new_funding_code(), #{fundingName}, #{fundingDescription}, #{fundingFoundation}, #{goodsCode}, #{fundingGoalAmount},
		 #{fundingStartDate}, #{fundingEndDate}, #{fundingProgress}, #{fundingRegId}, CURDATE(), #{fundingUpdateId}, #{fundingUpdateDate});
	</insert>
	
	
	<delete id="deleteFunding" parameterType="String">
		/* 펀딩 삭제 */
		DELETE
		FROM
		 	each_funding_info 
		WHERE 
			funding_code = #{fundingCode};
	</delete>	
	
	
 	<select id="getFundingInfoByCode" parameterType="String" resultMap="fundingResultMap">
		/* 특정 펀딩 조회*/
		SELECT
			funding_code,		  	
			funding_name,		  	
			funding_foundation, 	
			goods_code,		  	
			funding_goal_amount, 		
			funding_start_date,  				
			funding_end_date,	  	
			funding_progress,
			funding_reg_date,
			funding_update_date				
		FROM
			each_funding_info
		WHERE
			funding_code = #{fundingCode}		
	</select> 
	
	<select id="getFundingProgressList" resultType="FundingProgress">
		/* 진행상태 조회 */
		SELECT
			funding_progress AS fundingProgress
		FROM
			funding_progress_status;					
	</select>
	
	<select id="getGoodsCodeList" resultType="GoodsCode">
		/* 상품코드 조회 */
		SELECT
			goods_code AS goodsCode
		FROM
			goods_reg_info
		ORDER BY 
			CAST(SUBSTRING_INDEX(goods_code, 'goods',-1) AS unsigned), goods_code;			
	</select>	
	
	<select id="getFoundationNameList" resultType="FundingFoundation">
		/* 재단 목록 이름 조회 */
		SELECT			
			fl.foundation_name AS foundationName	
		FROM 
			foundation_list AS fl
		ORDER BY foundation_code;
	</select>	
	
	<update id="modifyFunding" parameterType="Funding">
		/* 펀딩 정보 수정 */
		UPDATE each_funding_info
		<set>
			funding_code = #{fundingCode},		
			funding_name = #{fundingName},
			funding_foundation = #{fundingFoundation},
			goods_code = #{goodsCode},
			funding_goal_amount = #{fundingGoalAmount},
			funding_start_date = #{fundingStartDate},			
			funding_end_date = #{fundingEndDate},
			funding_progress = #{fundingProgress},
			funding_update_date = NOW()			
		</set>
		WHERE 
			funding_code = #{fundingCode};
	</update>
	
	<select id="getFundingList" parameterType="list" resultType="funding">
		/* 펀딩 목록 조회 */
		SELECT
			f.funding_code		  	AS fundingCode,
			f.funding_name		  	AS fundingName,
			f.funding_foundation 	AS fundingFoundation,
			f.goods_code		  	AS goodsCode,
			f.funding_goal_amount 	AS fundingGoalAmount,	
			f.funding_start_date  	AS fundingStartDate,			
			f.funding_end_date	  	AS fundingEndDate,
			f.funding_progress 	  	AS fundingProgress		
		FROM
			each_funding_info AS f
		<where>
			<if test="searchList != null">			
				<foreach collection="searchList" item="item">
					<if test="item.value != null and item.value != ''">					
						AND ${item.key} LIKE CONCAT('%', #{item.value}, '%')
					</if>
				</foreach>
			</if>
		</where>		
		ORDER BY funding_code DESC;
	</select>
		
		
		
							<!--펀딩 결제 내역 -->	
	<select id="getFundingPayInfoByCode" parameterType="String" resultType="fundingPay">
		/* 특정 펀딩 결제 내역 */
		SELECT
			fp.funding_payment_code  	AS fundingPayCode,
			fp.user_id		  			AS userId,
			fp.funding_code		  		AS fundingCode,
			fp.funding_payment_date 	AS fundingPaymentDate,	
			fp.funding_payment_amount 	AS fundingPaymentAmount,			
			pm.pm_name				  	AS pmName,
			u.user_name					AS userName,
			u.user_phone				AS userPhone,
			ef.funding_name 			AS fundingName,
			ef.funding_foundation		AS fundingFoundation,
			ef.funding_progress			AS fundingProgress
		FROM
			funding_payments AS fp
			JOIN
			payment_method AS pm ON	fp.pm_code = pm.pm_code
			JOIN
			user_info AS u ON fp.user_id = u.user_id
			JOIN
			each_funding_info AS ef	ON fp.funding_code = ef.funding_code				
		WHERE
			funding_payment_code = #{fundingPayCode}		
	</select> 
	
	<select id="getFundingPayList" resultType="fundingPay">
		/* 펀딩 결제 내역 목록 조회 */
		SELECT
			fp.funding_payment_code  	AS fundingPayCode,
			fp.user_id		  			AS userId,
			fp.funding_code		  		AS fundingCode,
			fp.funding_payment_date 	AS fundingPaymentDate,	
			fp.funding_payment_amount 	AS fundingPaymentAmount,			
			pm.pm_name				  	AS pmName			
		FROM
			funding_payments AS fp
			JOIN
			payment_method AS pm			
			ON
				fp.pm_code = pm.pm_code			
		ORDER BY 
			CAST(SUBSTRING_INDEX(funding_payment_code, 'funding_payment',-1) AS unsigned) DESC, fp.funding_payment_code;
	</select>



									<!-- 펀딩 환불 -->							
	<select id="getFundingRefundInfoByCode" parameterType="String" resultType="fundingRefund">
		/* 특정 펀딩 환불내역 조회*/
		SELECT
			fr.funding_payment_refund_code 		AS fundingRefundCode,		  	
			fr.user_id 					   		AS refundUserId,		  	
			fr.funding_payment_code		   		AS fundingPayCode,
			fr.funding_refund_request_date 		AS refundRequestDate,		  	
			fr.funding_refund_request_amount	AS requestAmount, 		
			fr.funding_refund_bank_name			AS refundBank,  				
			fr.funding_refund_account			AS refundAccount,	  	
			fr.funding_refund_request_reason	AS requestReason,
			fr.funding_refund_status			AS requestStatus,
			fr.funding_refund_approval_date		AS approvalDate,
			fr.funding_refund_rejection_date	AS rejectionDate,
			fp.funding_payment_date				AS fundingPaymentDate,
			pm.pm_name							AS pmName
		FROM
			funding_payment_refund AS fr
			JOIN
			funding_payments AS fp
				ON fp.funding_payment_code = fr.funding_payment_code
			JOIN
			payment_method AS pm
				ON pm.pm_code = fp.pm_code
	</select> 
							
	<select id="getRefundList" parameterType="list" resultType="fundingRefund">
		/* 펀딩 환불 신청내역 조회 */
		SELECT
			fr.funding_payment_refund_code  	AS fundingRefundCode,
			fr.user_id 					   	 	AS refundUserId,
			fr.funding_payment_code 			AS fundingPayCode,
			fr.funding_refund_request_date 		AS refundRequestDate,
			fr.funding_refund_request_amount	AS requestAmount,
			fr.funding_refund_bank_name 		AS refundBank,
			fr.funding_refund_account 			AS refundAccount,
			fr.funding_refund_request_reason 	AS requestReason,
			fr.funding_refund_status 			AS requestStatus,
			fr.funding_refund_approval_date 	AS approvalDate,
			fr.funding_refund_rejection_date 	AS rejectionDate,			
			fp.funding_payment_date 			AS fundingPaymentDate,
			pm.pm_name 							AS pmName
		FROM
			funding_payment_refund AS fr
			JOIN
			funding_payments AS fp
				ON fp.funding_payment_code = fr.funding_payment_code
			JOIN
			payment_method AS pm
				ON pm.pm_code = fp.pm_code	
		<where>			
			<if test="keyword != null and keyword != ''">			
				${keyword} LIKE CONCAT('%', #{searchValue},'%')
			</if>		
		</where>
		ORDER BY funding_payment_refund_code DESC;
	</select>
	
	
	
	
</mapper>