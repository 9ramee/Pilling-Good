<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="ks46team04.admin.mapper.PurchaseMapper">
 	<resultMap type="Purchase" id="purchaseResultMap">
 		<id column="purchase_history_code" 			property="purchaseCode"></id>
 		<result column="purchase_status" 			property="purchaseStatus"></result>
 		<result column="goods_code" 				property="goodsCode"></result>
 		<result column="goods_name" 				property="goodsName"></result>
 		<result column="purchase_price" 			property="purchasePrice"></result>
 		<result column="purchase_quantity" 			property="purchaseQuantity"></result>
 		<result column="total_purchase_price"		property="totalPurchasePrice"></result>
 		<result column="purchase_date" 				property="purchaseDate"></result>
 		<result column="purchase_reg_id" 			property="purchaseRegId"></result>
 		<result column="purchase_reg_date"			property="purchaseRegDate"></result>
 		<result column="purchase_update_id" 		property="purchaseUpdateId"></result>
 		<result column="purchase_update_date" 		property="purchaseUpdateDate"></result>
 		<result column="purchase_group_code" 		property="purchaseGroupCode"></result>
 		<result column="user_purchse_deadlinde_check" property="userPurchseDeadlindeCheck"></result>
 	</resultMap>
 	
 	<select id="getTotalPurchaseList" resultType="Purchase">
 		/*매입 조회*/
 		<!-- SELECT		
 			purchase_history_code,
			purchase_status,	
			goods_code,		
			goods_name,		
			purchase_price,		
			purchase_quantity,		
			total_purchase_price,		
			purchase_date,		
			purchase_reg_id,		
			purchase_reg_date,		
			purchase_update_id,		
			purchase_update_date,		
			purchase_group_code,		
			user_purchse_deadlinde_check
		FROM
			purchase_history; -->
			
			SELECT		
				ph.purchase_history_code as purchaseCode, 
				ph.purchase_status as purchaseStatus,
				ph.goods_code as goodsCode,			
				gi.goods_name as goodsName,		
				ph.purchase_price as purchasePrice,		
				ph.purchase_quantity as purchaseQuantity,		
				ph.total_purchase_price as totalPurchasePrice,		
				ph.purchase_date as purchaseDate,		
				ph.purchase_reg_id as purchaseRegId,		
				ph.purchase_reg_date as purchaseRegDate,		
				ph.purchase_update_id as purchaseUpdateId,		
				ph.purchase_update_date as purchaseUpdateDate,		
				ph.purchase_group_code as purchaseGroupCode,		
				ph.user_purchse_deadlinde_check as userPurchseDeadlindeCheck,
				gi.goods_is_delete AS goodsIsDel
			FROM
				purchase_history AS ph
				INNER JOIN
				goods_reg_info AS gi
				ON
				ph.goods_code = gi.goods_code
 	</select>
 	
 	<insert id="addPurchase" parameterType="Purchase">
 		INSERT INTO purchase_history
		(
			purchase_history_code,		
			purchase_status,		
			goods_code,		
			goods_name,		
			purchase_price,		
			purchase_quantity,		
			total_purchase_price,		
			purchase_date,		
			purchase_reg_id,		
			purchase_reg_date,			
			purchase_group_code,		
			user_purchse_deadlinde_check
		)VALUES(
			#{purchaseCode},
			#{purchaseStatus},
			#{goodsCode},
			#{goodsName},
			${purchasePrice},
			${purchaseQuantity},
			${totalPurchasePrice},
			#{purchaseDate},
			#{purchaseRegId},
			NOW(),
			#{purchaseGroupCode},
			#{userPurchseDeadlindeCheck}
		);
 	</insert>
 	
 	<select id="getPurchaseByCode" parameterType="String" resultType="Purchase">
			SELECT		
				ph.purchase_history_code as purchaseCode, 
				ph.purchase_status as purchaseStatus,
				ph.goods_code as goodsCode,			
				gi.goods_name as goodsName,		
				ph.purchase_price as purchasePrice,		
				ph.purchase_quantity as purchaseQuantity,		
				ph.total_purchase_price as totalPurchasePrice,		
				ph.purchase_date as purchaseDate,		
				ph.purchase_reg_id as purchaseRegId,		
				ph.purchase_reg_date as purchaseRegDate,		
				ph.purchase_update_id as purchaseUpdateId,		
				ph.purchase_update_date as purchaseUpdateDate,		
				ph.purchase_group_code as purchaseGroupCode,		
				ph.user_purchse_deadlinde_check as userPurchseDeadlindeCheck,
				gi.goods_is_delete AS goodsIsDel
			FROM
				purchase_history AS ph
				INNER JOIN
				goods_reg_info AS gi
				ON
				ph.goods_code = gi.goods_code
			WHERE 
				ph.purchase_history_code = #{purchaseCode}
				and
				ph.goods_code = #{goodsCode};
 	</select>
 	
 	<update id="modifyPurchase" parameterType="Purchase">
 		UPDATE
			purchase_history
		SET 
			purchase_status = #{purchaseStatus},
			purchase_price = ${purchasePrice},
			purchase_quantity = ${purchaseQuantity},
			total_purchase_price = ${totalPurchasePrice},
			purchase_date = #{purchaseDate},
			purchase_update_id = #{purchaseUpdateId},
			purchase_update_date = NOW(),
			purchase_group_code = #{purchaseGroupCode},
			user_purchse_deadlinde_check = #{userPurchseDeadlindeCheck}
		WHERE
		 	purchase_history_code = #{purchaseCode};	
 	</update>
 </mapper>