<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ks46team04.admin.mapper.UserMapper">

	<resultMap type="User" id="userResultMap">
		<id column="user_id" property="userId" />
		<result column="user_level" property="userLevel" />
		<result column="user_pw" property="userPw" />
		<result column="user_name" property="userName" />
		<result column="user_birth" property="userBirth" />
		<result column="user_phone" property="userPhone" />
		<result column="user_email_agree" property="userEmailAgree" />
		<result column="user_email" property="userEmail" />
		<result column="user_addr" property="userAddr" />
		<result column="user_join_date" property="userJoinDate" />
		<result column="login_log_code" property="loginLogCode" />
		<result column="log_date_calcul" property="logDateCalcul" />
		<result column="user_update_date" property="userUpdateDate" />
		<result column="activity_status_standard_code"
			property="activityStatusStandardCode" />
	</resultMap>



	<select id="getLastLogoutTime" resultType="userSleep">
		/* 회원별 마지막 로그아웃 시간 조회
		*/
		SELECT
		ui.user_id,
		ll.login_log_code,
		MAX(ll.logout_time) AS
		lastLogoutTime
		FROM
		user_info ui
		INNER JOIN
		login_log ll ON
		ui.login_log_code = ll.login_log_code
		GROUP BY
		ui.user_id,
		ll.login_log_code
	</select>

	<update id="updateUserSleep" parameterType="String">
		/* 휴면회원 전환 */
		UPDATE
		user_info
		SET
		activity_status_standard_code = 'status_dormant'
		WHERE
		user_id IN (
		SELECT
		ui.user_id
		FROM
		user_info ui
		INNER JOIN
		login_log ll ON
		ui.login_log_code = ll.login_log_code
		WHERE
		DATEDIFF(NOW(),
		ll.logout_time) >= 91
		);
	</update>

	<select id="getUserSleepList" resultType="userSleep">
		/* 휴면회원 조회 */
		SELECT
		user_id AS userId,
		user_level AS userLevel,
		user_pw AS userPw,
		user_name
		AS userName,
		user_birth AS userBirth,
		user_phone AS userPhone,
		user_email_agree AS userEmailAgree,
		user_email AS userEmail,
		user_addr
		AS userAddr,
		user_join_date AS userJoinDate,
		login_log_code AS
		loginLogCode,
		log_date_calcul AS logDateCalcul,
		activity_status_standard_code AS activityStatusStandardCode
		FROM
		user_sleep
		WHERE
		activity_status_standard_code = 'status_dormant'
		AND
		log_date_calcul >= 91;
	</select>


	<insert id="insertLoginLog" parameterType="LoginLog">
		<selectKey keyProperty="loginLogCode" resultType="String"
			order="BEFORE">
			SELECT sf_new_login_log_code() AS login_log_code
		</selectKey>
		INSERT INTO login_log
		(login_log_code, user_id, login_time, login_ip)
		VALUES (
		#{loginLogCode},
		#{userId},
		#{loginTime},
		#{loginIp}
		);
	</insert>

	<update id="updateLogoutLog" parameterType="LoginLog">
		UPDATE login_log as t,
			  ( SELECT 
					login_log_code 
				FROM 
					login_log
				WHERE
					user_id = #{userId}
					AND 
					login_ip = #{loginIp}
				ORDER BY login_time DESC
				LIMIT 1	) as l
		SET
			t.logout_time = now()
		WHERE
			t.login_log_code = l.login_log_code;
	</update>


	<select id="getLoginLogList" resultType="LoginLog">
		/* 회원 로그인 정보 조회 */
		SELECT
		login_log_code AS loginLogCode
		,user_id AS userId
		,login_time AS
		loginTime
		,logout_time AS logoutTime
		,login_ip AS loginIp
		FROM
		login_log
		ORDER BY login_time DESC;
	</select>


	<select id="getActivityStatusList" resultType="ActivityStatus">
		/* 회원 활동 상태 기준 조회
		*/
		SELECT
		activity_status_standard_code AS activityStatusStandardCode
		,activity_status_name AS activityStatusName
		,activity_status_standard_date AS activityStatusStandardDate
		,activity_status_reg_id AS activityStatusRegId
		,activity_status_reg_date AS activityStatusRegDate
		,activity_status_update_id AS activityStatusUpdateId
		,activity_status_update_date AS activityStatusUpdateDate
		FROM
		activity_status_standard;
	</select>


	<delete id="removeUserById" parameterType="String">
		/* 탈퇴 회원 전환 및 회원정보 삭제
		*/
		UPDATE user_info
		SET
		activity_status_standard_code = 'status_withdraw'
		WHERE user_id =
		#{userId};

		DELETE FROM user_info
		WHERE user_id =
		#{userId};

		/* 탈퇴 회원 추가 */
		INSERT INTO
		user_drop (user_id,
		user_drop_date,
		activity_status_standard_code)
		VALUES (#{userId}, NOW(),
		'status_withdraw');
	</delete>

	<select id="getUserDropList" resultType="userDrop">
		/* 탈퇴 회원 목록 조회 */
		SELECT
		user_id AS userId
		,user_drop_date AS userDropDate
		,activity_status_standard_code AS activityStatusStandardCode
		FROM
		user_drop;
	</select>



	<update id="modifyUser" parameterType="User">
		/* 회원 정보 수정 */ UPDATE
		user_info
		<trim prefix="SET" suffixOverrides=",">
			<if test="userLevel != null and userLevel != ''">
				user_level = #{userLevel},
			</if>
			<if test="userPw != null and userPw != ''">
				user_pw = #{userPw},
			</if>
			<if test="userBirth != null and userBirth != ''">
				user_birth = #{userBirth},
			</if>
			<if test="userPhone != null and userPhone != ''">
				user_phone = #{userPhone},
			</if>
			<if test="userEmailAgree != null and userEmailAgree != ''">
				user_email_agree = #{userEmailAgree},
			</if>
			<if test="userEmail != null and userEmail != ''">
				user_email = #{userEmail},
			</if>
			<if test="userAddr != null and userAddr != ''">
				user_addr = #{userAddr},
			</if>
			user_update_date = now()
		</trim>
		WHERE user_id = #{userId} AND user_name = #{userName};
	</update>

	<select id="getUserDetailList" parameterType="String"
		resultMap="userResultMap">
		/* 회원상세 조회 */
		SELECT
		u.user_id AS userId
		,u.user_level AS
		userLevel
		,u.user_pw AS userPw
		,u.user_name AS userName
		,u.user_birth AS
		userBirth
		,u.user_phone AS userPhone
		,u.user_email_agree AS
		userEmailAgree
		,u.user_email AS userEmail
		,u.user_addr AS userAddr
		,u.user_join_date AS userJoinDate
		,u.login_log_code AS loginLogCode
		,u.log_date_calcul AS logDateCalcul
		,u.user_update_date AS
		userUpdateDate
		,u.activity_status_standard_code AS
		activityStatusStandardCode
		FROM
		user_info AS u
		WHERE
		u.user_id =
		#{userId};
	</select>

	<select id="getUserInfoById" parameterType="String"
		resultType="User">
		/* 특정회원 조회 */
		SELECT
		u.user_id AS userId
		,u.user_level AS
		userLevel
		,u.user_pw AS userPw
		,u.user_name AS userName
		,u.user_birth AS
		userBirth
		,u.user_phone AS userPhone
		,u.user_email_agree AS
		userEmailAgree
		,u.user_email AS userEmail
		,u.user_addr AS userAddr
		,u.user_join_date AS userJoinDate
		,u.login_log_code AS loginLogCode
		,u.log_date_calcul AS logDateCalcul
		,u.user_update_date AS
		userUpdateDate
		,u.activity_status_standard_code AS
		activityStatusStandardCode
		FROM
		user_info AS u
		WHERE
		u.user_id =
		#{userId};
	</select>

	<insert id="addUser" parameterType="User">
		/* 회원가입 */
		INSERT INTO
		user_info
		(user_id, user_level, user_pw, user_name, user_birth,
		user_phone,
		user_email_agree, user_email, user_addr, user_join_date,
		activity_status_standard_code)
		VALUES
		(#{userId}, #{userLevel},
		#{userPw}, #{userName}, #{userBirth},
		#{userPhone}, #{userEmailAgree},
		#{userEmail}, #{userAddr}, NOW(), 'status_active');
	</insert>

	<select id="pwCheck" parameterType="String" resultType="boolean">
		/* 비밀번호
		확인 */
		SELECT
		COUNT(*) > 0
		FROM
		user_info as u
		WHERE
		u.user_id = #{userId}
		AND u.user_pw = #{userPw};
	</select>


	<select id="idCheck" parameterType="String" resultType="boolean">
		/* 아이디
		중복체크 */
		SELECT
		IF(COUNT(1)=0, 1, 0)
		FROM
		user_info as u
		WHERE
		u.user_id =
		#{userId};
	</select>

	<select id="getUserLevelList" resultType="UserLevel">
		/* 회원 등급 조회 */
		SELECT
		user_level AS userLevel
		,user_level_name AS userLevelName
		FROM
		user_level_standard;
	</select>

	<select id="getUserList" parameterType="String"
		resultType="User">
		/* 회원 목록
		조회 */ SELECT u.user_id AS userId ,u.user_level AS userLevel
		,u.user_pw
		AS userPw ,u.user_name AS userName ,u.user_birth AS
		userBirth
		,u.user_phone AS userPhone ,u.user_email_agree AS
		userEmailAgree
		,u.user_email AS userEmail ,u.user_addr AS userAddr
		,u.user_join_date AS
		userJoinDate ,u.login_log_code AS loginLogCode
		,u.log_date_calcul AS
		logDateCalcul ,u.user_update_date AS
		userUpdateDate
		,u.activity_status_standard_code AS
		activityStatusStandardCode FROM
		user_info AS u
		<where>
			<if test="searchKey != null and searchKey != ''">
				${searchKey} LIKE CONCAT('%', #{searchValue},'%')
			</if>
		</where>
		ORDER BY userJoinDate DESC;
	</select>

</mapper>